= Maven project structure for FSW applications with ear deployments

This project shows the basic structure for a FSW application consisting of:

* A jboss module (this will hold beans and common classes for multiple applications)
* Applications (appA, appB, .... these will be .ear applications with multiple switchyard composites, and maybe some common classes to the ear)
* A distribution (this will hold everything that needs to be deployed to the server (the module in modules, and the .ear files in standalone/deployments)

*If you are going to start a new project, this can be used as a template, as it is proved to work.*

== The jboss module (com.example.fsw.core)
This JBoss module will hold common classes, beans, interfaces, .... that will be shared by all of the applications.
It consists of 3 projects:

* *beans*: Java bean classes
* *common*: Common classes, utils and interfaces
* *module*: assembly project for the JBoss module. It contains the *module.xml* definition. It creates a zip of the module that can be directly extracted on your EAP installation

== The applications (appA, appB)
There are 2 applications packages as *.ear* files, with multiple composites in it, and a set of classes that are only used within the composites of that particular application. Every "application " consists of 4 projects:

* *beans*: Java bean classes and common classes used by any composite of the application (.ear)
* *compositeX*: A set of SwitchYard composites that interconnect via SCA calls
* *application*: ear package of the application. It will also hold the *jboss-deployment-structure.xml* file to define module dependnecies.

== The distribution (example-fsw-distrib.zip)
This will be a zip file containing everything needed to deliver the application on top of an application server (EAP). If you unzip the file on the $EAP_HOME folder, it should leave you the server ready to run. This is an assembly type of project.

Here, you should customize things like:

* modules
* configuration
* scripts
* installers
